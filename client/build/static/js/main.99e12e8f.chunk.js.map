{"version":3,"sources":["components/navbar.component.js","components/Job/jobs-list.component.js","components/Job/create-job.component.js","components/Job/edit-job.component.js","components/company/companies-list.component.js","components/company/create-company.component.js","components/company/edit-company.component.js","components/search/useFetchJobs.js","components/search/Job.js","components/search/SearchForm.js","components/search/searchJob.js","components/npmUse.js","components/App.js","index.js"],"names":["Navbar","className","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","Job","props","style","color","job","company","jobTitle","description","duration","status","date","substring","role","_id","href","onClick","window","confirm","deleteJob","JobsList","bind","state","jobs","axios","get","then","response","console","log","data","setState","catch","error","delete","this","filter","el","map","currentjob","key","textAlign","jobList","CreateJob","onChangeCompany","onChangeJobTitle","onChangeDescription","onChangeDuration","onChangeDate","onChangeStatus","onSubmit","Date","companies","length","name","e","target","value","preventDefault","post","res","history","push","ref","required","onChange","EditJob","match","params","user","location","Company","contact1","contact2","herf","deleteCompany","CompaniesList","currentcompany","companyList","CreateCompany","onChangeName","onChangeLocation","onChangeContact1","onChangeContact2","CreateUser","ACTIONS","BASE_URL","reducer","action","loading","payload","hasNextPage","useState","open","setOpen","Card","Body","Title","title","Subtitle","created_at","toLocaleDateString","Badge","variant","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","prevOpen","Collapse","in","SearchForm","onParamChange","Form","Control","full_time","label","SearchJob","setParams","page","useReducer","dispatch","useEffect","cancelToken1","CancelToken","cancelToken","token","markdown","isCancel","cancelToken2","cancel","useFetchJobs","param","prevParams","App","path","exact","component","JobList","EditCompany","npmUse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e12e8f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\" id=\"navcolo\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Job Hunter\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/company-list\" className=\"nav-link\">\n                Company List\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create-job\" className=\"nav-link\">\n                Create Job Log\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create-company\" className=\"nav-link\">\n                Create Company\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/search-job\" className=\"nav-link\">\n                Search Jobs\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/npm-use\" className=\"nav-link\">\n                Npm Use\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","// the homepage that shows every applied job\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Job = (props) => (\n  <tr>\n    <td style={{ color: \"white\" }}>{props.job.company}</td>\n    <td>{props.job.jobTitle}</td>\n    <td>{props.job.description}</td>\n    <td>{props.job.duration}</td>\n    <td>{props.job.status}</td>\n    <td>{props.job.date.substring(0, 10)}</td>\n    <td>\n      <div\n        className=\"btn-toolbar\"\n        role=\"toolbar\"\n        aria-label=\"Toolbar with button groups\"\n      >\n        <div className=\"btn-group mr-3\" id=\"tableButton\" role=\"group\">\n          <Link to={\"/edit-job/\" + props.job._id}>Edit</Link>\n        </div>\n        <div className=\"btn-group\" id=\"tableButton\" role=\"group\">\n          <a\n            href=\"#\"\n            onClick={() => {\n              if (window.confirm(\"Delete the Job?\")) {\n                props.deleteJob(props.job._id);\n              }\n            }}\n            style={{ color: \"red\" }}\n          >\n            Delete\n          </a>\n        </div>\n      </div>\n    </td>\n  </tr>\n);\n\n// a class component\nexport default class JobsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteJob = this.deleteJob.bind(this);\n    // intialize the state to an empry job array\n    this.state = { jobs: [] };\n  }\n\n  // get the job form the DB\n  componentDidMount() {\n    //axios.get('http://localhost:5000/jobs/')\n    axios\n      .get(\"https://the-job-hunter.herokuapp.com/jobs/\")\n      .then((response) => {\n        // get all the fields of the job (id, discription, duration, ...)\n        console.log(response.data);\n        this.setState({ jobs: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteJob(id) {\n    //axios.delete('http://localhost:5000/jobs/'+id)\n    axios\n      .delete(\"https://the-job-hunter.herokuapp.com/jobs/\" + id)\n      .then((response) => {\n        console.log(response.data);\n      });\n\n    // after the delete operation, automatically update the page with that new state\n    this.setState({\n      jobs: this.state.jobs.filter((el) => el._id !== id),\n    });\n  }\n\n  // return the rows of the table\n  jobList() {\n    return this.state.jobs.map((currentjob) => {\n      return (\n        <Job job={currentjob} deleteJob={this.deleteJob} key={currentjob._id} />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"rTable\">\n        <h3>Jobs Application</h3>\n        <table className=\"table\">\n          <thead>\n            <tr style={{ textAlign: \"center\" }}>\n              <th>Company</th>\n              <th>Job Title</th>\n              <th>Job Description</th>\n              <th>Travel Duration</th>\n              <th>Status</th>\n              <th>Due Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.jobList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class CreateJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompany = this.onChangeCompany.bind(this);\n    this.onChangeJobTitle = this.onChangeJobTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // set the initial state of the component\n    this.state = {\n      company: \"\",\n      jobTitle: \"\",\n      description: \"\",\n      duration: \"\",\n      status: \"\",\n      date: new Date(),\n      // for the drop down menu\n      companies: [],\n    };\n  }\n\n  componentDidMount() {\n    //axios.get('http://localhost:5000/companies/')\n    axios\n      .get(\"https://the-job-hunter.herokuapp.com/companies/\")\n      .then((response) => {\n        // check if there is at least one company in the DB\n        if (response.data.length > 0) {\n          this.setState({\n            companies: response.data.map((company) => company.name),\n            //first company in the DB\n            company: response.data[0].name,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // methods which can be used to update the state properties\n  onChangeCompany(e) {\n    this.setState({\n      company: e.target.value,\n    });\n  }\n\n  onChangeJobTitle(e) {\n    this.setState({\n      jobTitle: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value,\n    });\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value,\n    });\n  }\n\n  onChangeStatus(e) {\n    this.setState({\n      status: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const job = {\n      company: this.state.company,\n      jobTitle: this.state.jobTitle,\n      description: this.state.description,\n      duration: this.state.duration,\n      status: this.state.status,\n      date: this.state.date,\n    };\n\n    //axios.post('http://localhost:5000/jobs/add', job)\n    axios\n      .post(\"https://the-job-hunter.herokuapp.com/jobs/add\", job)\n      // log the result to the console\n      .then((res) => {\n        console.log(res.data);\n        this.props.history.push(\"/\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New Job Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Company </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.company}\n              onChange={this.onChangeCompany}\n            >\n              {this.state.companies.map(function (company) {\n                return (\n                  <option key={company} value={company}>\n                    {company}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Job Title </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.jobTitle}\n              onChange={this.onChangeJobTitle}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Job Description </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Travel Duration(in minutes)</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Status</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.status}\n              onChange={this.onChangeStatus}\n            />\n          </div>\n\n          {/* -------------------Date------------------------------ */}\n          <div className=\"form-group\">\n            <label>Date</label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <div\n              className=\"btn-toolbar\"\n              role=\"toolbar\"\n              aria-label=\"Toolbar with button groups\"\n            >\n              <div className=\"input-group mr-2\">\n                <input\n                  type=\"submit\"\n                  value=\"Create Job Log\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n              <div className=\"btn-group\" role=\"group\">\n                <Link to=\"/\">\n                  <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    className=\"btn btn-danger\"\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class EditJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompany = this.onChangeCompany.bind(this);\n    this.onChangeJobTitle = this.onChangeJobTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      company: \"\",\n      jobTitle: \"\",\n      description: \"\",\n      duration: \"\",\n      status: \"\",\n      date: new Date(),\n      companies: [],\n    };\n  }\n\n  componentDidMount() {\n    //axios.get('http://localhost:5000/jobs/'+this.props.match.params.id)\n    axios\n      .get(\n        \"https://the-job-hunter.herokuapp.com/jobs/\" +\n          this.props.match.params.id\n      )\n      .then((response) => {\n        this.setState({\n          company: response.data.company,\n          jobTitle: response.data.jobTitle,\n          description: response.data.description,\n          duration: response.data.duration,\n          status: response.data.status,\n          date: new Date(response.data.date),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    //axios.get('http://localhost:5000/companies/')\n    axios\n      .get(\"https://the-job-hunter.herokuapp.com/companies/\")\n      .then((response) => {\n        if (response.data.length > 0) {\n          this.setState({\n            companies: response.data.map((user) => user.name),\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChangeCompany(e) {\n    this.setState({\n      company: e.target.value,\n    });\n  }\n\n  onChangeJobTitle(e) {\n    this.setState({\n      jobTitle: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value,\n    });\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value,\n    });\n  }\n\n  onChangeStatus(e) {\n    this.setState({\n      status: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const job = {\n      company: this.state.company,\n      jobTitle: this.state.jobTitle,\n      description: this.state.description,\n      duration: this.state.duration,\n      status: this.state.status,\n      date: this.state.date,\n    };\n\n    //console.log(job);\n\n    //axios.post('http://localhost:5000/jobs/update/' + this.props.match.params.id, job)\n    console.log(\"UPDATING\");\n    axios\n      .post(\n        \"https://the-job-hunter.herokuapp.com/jobs/update/\" +\n          this.props.match.params.id,\n        job\n      )\n      .then((res) => {\n        console.log(res.data);\n        window.location = \"/\";\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Job Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Company </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.company}\n              onChange={this.onChangeCompany}\n            >\n              {this.state.companies.map(function (user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Job Title </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.jobTitle}\n              onChange={this.onChangeJobTitle}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Job Description </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Travel Duration(in minutes) </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Status</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.status}\n              onChange={this.onChangeStatus}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date</label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div\n              className=\"btn-toolbar\"\n              role=\"toolbar\"\n              aria-label=\"Toolbar with button groups\"\n            >\n              <div className=\"input-group mr-2\">\n                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n              </div>\n              <div className=\"btn-group\" role=\"group\">\n                <Link to=\"/\">\n                  <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    className=\"btn btn-danger\"\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Company = (props) => (\n  <tr>\n    <td>{props.company.name}</td>\n    <td>{props.company.location}</td>\n    <td>{props.company.contact1}</td>\n    <td>{props.company.contact2}</td>\n    <td>\n      <div\n        className=\"btn-toolbar\"\n        role=\"toolbar\"\n        aria-label=\"Toolbar with button groups\"\n      >\n        <div className=\"btn-group mr-3\" id=\"tableButton\" role=\"group\">\n          <Link to={\"/edit-company/\" + props.company._id}>Edit</Link>\n        </div>\n        <div className=\"btn-group\" id=\"tableButton\" role=\"group\">\n          <a\n            herf=\"#\"\n            onClick={() => {\n              if (window.confirm(\"Delete the Company?\")) {\n                props.deleteCompany(props.company._id);\n              }\n            }}\n            style={{ color: \"red\" }}\n          >\n            Delete\n          </a>\n        </div>\n      </div>\n    </td>\n  </tr>\n);\n\nexport default class CompaniesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteCompany = this.deleteCompany.bind(this);\n    this.state = { companies: [] };\n  }\n\n  componentDidMount() {\n    //axios.get('http://localhost:5000/companies/')\n    axios\n      .get(\"https://the-job-hunter.herokuapp.com/companies/\")\n      .then((response) => {\n        console.log(response.data);\n        this.setState({ companies: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteCompany(id) {\n    //axios.delete('http://localhost:5000/companies/'+id)\n    axios\n      .delete(\"https://the-job-hunter.herokuapp.com/companies/\" + id)\n      .then((response) => {\n        console.log(response.data);\n      });\n\n    this.setState({\n      companies: this.state.companies.filter((el) => el._id !== id),\n    });\n  }\n\n  // return the rows of the table,\n  companyList() {\n    return this.state.companies.map((currentcompany) => {\n      return (\n        <Company\n          company={currentcompany}\n          deleteCompany={this.deleteCompany}\n          key={currentcompany._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"rTable\">\n        <h3>Logged Companies</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Company</th>\n              <th>Location</th>\n              <th>Contact Number</th>\n              <th>Address</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.companyList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class CreateCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeContact1 = this.onChangeContact1.bind(this);\n    this.onChangeContact2 = this.onChangeContact2.bind(this);\n\n    this.state = {\n      name: \"\",\n      location: \"\",\n      contact1: \"\",\n      contact2: \"\",\n    };\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value,\n    });\n  }\n\n  onChangeContact1(e) {\n    this.setState({\n      contact1: e.target.value,\n    });\n  }\n\n  onChangeContact2(e) {\n    this.setState({\n      contact2: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const company = {\n      name: this.state.name,\n      location: this.state.location,\n      contact1: this.state.contact1,\n      contact2: this.state.contact2,\n    };\n\n    console.log(company);\n\n    //axios.post('http://localhost:5000/companies/add', company)\n    axios\n      .post(\"https://the-job-hunter.herokuapp.com/companies/add\", company)\n      .then((res) => {\n        console.log(res.data);\n        this.props.history.push(\"/company-list\");\n      });\n\n    this.setState({\n      name: \"\",\n      location: \"\",\n      contact1: \"\",\n      contact2: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New Company</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label>Company </label>\n              <label style={{ color: \"red\" }}>＊ </label>\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.name}\n                onChange={this.onChangeName}\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label>Location</label>\n              <label style={{ color: \"red\" }}>＊ </label>\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.location}\n                onChange={this.onChangeLocation}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Contact Number</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.contact1}\n              onChange={this.onChangeContact1}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.contact2}\n              onChange={this.onChangeContact2}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div\n              className=\"btn-toolbar\"\n              role=\"toolbar\"\n              aria-label=\"Toolbar with button groups\"\n            >\n              <div className=\"input-group mr-2\">\n                <input\n                  type=\"submit\"\n                  value=\"Create Company\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n              <div className=\"btn-group\" role=\"group\">\n                <Link to=\"/company-list\">\n                  <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    className=\"btn btn-danger\"\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeContact1 = this.onChangeContact1.bind(this);\n    this.onChangeContact2 = this.onChangeContact2.bind(this);\n\n    this.state = {\n      name: \"\",\n      location: \"\",\n      contact1: \"\",\n      contact2: \"\",\n    };\n  }\n\n  componentDidMount() {\n    //axios.get('http://localhost:5000/companies/'+this.props.match.params.id)\n    axios\n      .get(\n        \"https://the-job-hunter.herokuapp.com/companies/\" +\n          this.props.match.params.id\n      )\n      .then((response) => {\n        this.setState({\n          name: response.data.name,\n          location: response.data.location,\n          contact1: response.data.contact1,\n          contact2: response.data.contact2,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value,\n    });\n  }\n\n  onChangeContact1(e) {\n    this.setState({\n      contact1: e.target.value,\n    });\n  }\n\n  onChangeContact2(e) {\n    this.setState({\n      contact2: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const company = {\n      name: this.state.name,\n      location: this.state.location,\n      contact1: this.state.contact1,\n      contact2: this.state.contact2,\n    };\n\n    console.log(company[0]);\n\n    //axios.post('http://localhost:5000/companies/update/' + this.props.match.params.id, company)\n    axios\n      .post(\n        \"https://the-job-hunter.herokuapp.com/companies/update/\" +\n          this.props.match.params.id,\n        company\n      )\n      .then((res) => {\n        console.log(res.data);\n        window.location = \"/company-list\";\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Company</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Company </label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Location</label>\n            <label style={{ color: \"red\" }}>＊ </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.location}\n              onChange={this.onChangeLocation}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Contact Number</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.contact1}\n              onChange={this.onChangeContact1}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.contact2}\n              onChange={this.onChangeContact2}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div\n              className=\"btn-toolbar\"\n              role=\"toolbar\"\n              aria-label=\"Toolbar with button groups\"\n            >\n              <div className=\"input-group mr-2\">\n                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n              </div>\n              <div className=\"btn-group\" role=\"group\">\n                <Link to=\"/company-list\">\n                  <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    className=\"btn btn-danger\"\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ACTIONS = {\n  MAKE_REQUEST: \"make-request\",\n  GET_DATA: \"get-data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\n};\n\nconst BASE_URL = \"https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] };\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs };\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: [],\n      };\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage };\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { markdown: true, page: page, ...params },\n      })\n      .then((res) => {\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    const cancelToken2 = axios.CancelToken.source();\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken2.token,\n        params: { markdown: true, page: page + 1, ...params },\n      })\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n          payload: { hasNextPage: res.data.length !== 0 },\n        });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}\n","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: 'break-all' }}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\n        </div>\n        <Card.Text>\n          <Button\n            onClick={() => setOpen(prevOpen => !prevOpen)}\n            variant=\"primary\"\n          >\n            {open ? 'Hide Details' : 'View Details'}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\n\nexport default function SearchForm({ params, onParamChange }) {\n  return (\n    <div className=\"mb-4\">\n      <form className=\"align-items-end\">\n        <label>Description</label>\n        <Form.Control\n          onChange={onParamChange}\n          value={params.description}\n          name=\"description\"\n          type=\"text\"\n        />\n\n        <label>Location</label>\n        <Form.Control\n          onChange={onParamChange}\n          value={params.location}\n          name=\"location\"\n          type=\"text\"\n        />\n\n        <input\n          onChange={onParamChange}\n          value={params.full_time}\n          name=\"full_time\"\n          id=\"full-time\"\n          label=\"Only Full Time\"\n          type=\"checkbox\"\n          className=\"mb-2\"\n        />\n        <label> Full Time </label>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport Job from \"./Job\";\n\nimport SearchForm from \"./SearchForm\";\n\nfunction SearchJob() {\n  const [params, setParams] = useState({});\n  const { jobs, loading, error } = useFetchJobs(params);\n  \n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n\n  return (\n    <div className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />;\n      })}\n    </div>\n  );\n}\n\nexport default SearchJob;\n","import React from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <h2> ~/brain $ npm install GA@Syd</h2>\n      <h2> ~/brain $ npm install Joel</h2>\n      <h2> ~/brain $ npm install Mai</h2>\n      <br />\n      <h2>import ItSkill from \"GA@Syd\";</h2>\n      <h2>import Help, Further from \"Joel\";</h2>\n      <h2>import Help, Further from \"Mai\";</h2>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// react bootstrap navbar collapse hamburger button\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"../App.css\";\n\n// components\nimport Navbar from \"./navbar.component\";\nimport JobList from \"./Job/jobs-list.component\";\nimport CreateJob from \"./Job/create-job.component\";\nimport EditJob from \"./Job/edit-job.component\";\nimport CompaniesList from \"./company/companies-list.component\";\nimport CreateCompany from \"./company/create-company.component\";\nimport EditCompany from \"./company/edit-company.component\";\nimport SearchJob from \"./search/searchJob\";\nimport npmUse from \"./npmUse\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br />\n        <Route path=\"/\" exact component={JobList} />\n        <Route path=\"/company-list\" component={CompaniesList} />\n        <Route path=\"/edit-job/:id\" component={EditJob} />\n        <Route path=\"/edit-company/:id\" component={EditCompany} />\n        <Route path=\"/create-job\" component={CreateJob} />\n        <Route path=\"/create-company\" component={CreateCompany} />\n        <Route path=\"/search-job\" component={SearchJob} />\n        <Route path=\"/npm-use\" component={npmUse} />\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}